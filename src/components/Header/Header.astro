---
import { LOGO_IMAGE, SITE } from "@config";
import Hr from "../Hr.astro";
import MenuIconButton from "./Button/MenuIconButton.astro";
import LightDarkButton from "./Button/LightDarkButton.astro";
import SearchButton from "./Button/SearchButton.astro";
import AchivesButton from "./Button/AchivesButton.astro";

export interface Props {
  activeNav?: "posts" | "archives" | "tags" | "about" | "search" | "friends";
}

const { activeNav } = Astro.props;
---

<header>
  <a id="skip-to-content" href="#main-content">Skip to content</a>
  <div class="nav-container">
    <div class="top-nav-wrap">
      <a href="/" class="logo whitespace-nowrap">
        {
          LOGO_IMAGE.enable ? (
            <img
              src={`/assets/${LOGO_IMAGE.svg ? "logo.svg" : "logo.png"}`}
              alt={SITE.title}
              width={LOGO_IMAGE.width}
              height={LOGO_IMAGE.height}
            />
          ) : (
            SITE.title
          )
        }
      </a>
      <nav id="nav-menu">
        <MenuIconButton />
        <ul id="menu-items" class="display-none sm:flex">
          <li>
            <a href="/posts/" class={activeNav === "posts" ? "active" : ""}>
              Posts
            </a>
          </li>
          <li>
            <a href="/tags/" class={activeNav === "tags" ? "active" : ""}>
              Tags
            </a>
          </li>
          <li>
            <a href="/about/" class={activeNav === "about" ? "active" : ""}>
              About
            </a>
          </li>
          <li>
            <a href="/friends/" class={activeNav === "friends" ? "active" : ""}>
              Friends
            </a>
          </li>
          {
            SITE.showArchives && (
              <li>
                <AchivesButton activeNav={activeNav} />
              </li>
            )
          }
          <li><SearchButton activeNav={activeNav} /></li>
          {
            SITE.lightAndDarkMode && (
              <li>
                <LightDarkButton />
              </li>
            )
          }
        </ul>
      </nav>
    </div>
  </div>
  <Hr />
</header>

<style>
  #skip-to-content {
    @apply absolute -top-full left-16 z-50 bg-skin-accent px-3 py-2 text-skin-inverted transition-all focus:top-4;
  }
  .nav-container {
    @apply mx-auto flex max-w-4xl flex-col items-center justify-between sm:flex-row;
  }
  .top-nav-wrap {
    @apply relative flex w-full items-start justify-between p-4 sm:items-center sm:py-8;
  }
  .logo {
    @apply absolute py-1 text-xl font-semibold sm:static sm:text-2xl;
  }
  nav {
    @apply flex w-full flex-col items-center sm:ml-2 sm:flex-row sm:justify-end sm:space-x-4 sm:py-0;
  }
  nav ul {
    @apply mt-4 grid w-44 grid-cols-2 grid-rows-4 gap-x-2 gap-y-2 sm:ml-0 sm:mt-0 sm:w-auto sm:gap-x-5 sm:gap-y-0;
  }
  nav ul li {
    @apply col-span-2 flex items-center justify-center;
  }
  nav ul li a {
    @apply w-full px-4 py-3 text-center font-medium hover:text-skin-accent sm:my-0 sm:px-2 sm:py-1;
  }
  nav ul li:nth-last-child(2) a {
    @apply w-auto;
  }
  nav ul li:nth-last-child(1),
  nav ul li:nth-last-child(2) {
    @apply col-span-1;
  }
  nav .active {
    @apply underline decoration-wavy decoration-2 underline-offset-8;
  }
</style>

<script>
  function toggleNav() {
    // Toggle menu
    const menuBtn = document.querySelector(".hamburger-menu");
    const menuIcon = document.querySelector(".menu-icon");
    const menuItems = document.querySelector("#menu-items");
    const menuClose = menuIcon?.querySelectorAll(".close");
    menuClose?.forEach(line => {
      line.classList.toggle("opacity-0");
    });
    menuBtn?.addEventListener("click", () => {
      const menuExpanded = menuBtn.getAttribute("aria-expanded") === "true";
      menuIcon?.classList.toggle("is-active");
      const menuLines = menuIcon?.querySelectorAll(".line");
      menuLines?.forEach(line => {
        line.classList.toggle("opacity-0");
      });
      menuClose?.forEach(line => {
        line.classList.toggle("opacity-100");
      });
      menuBtn.setAttribute("aria-expanded", menuExpanded ? "false" : "true");
      menuBtn.setAttribute(
        "aria-label",
        menuExpanded ? "Open Menu" : "Close Menu"
      );
      menuItems?.classList.toggle("display-none");
    });
  }

  toggleNav();

  // Runs on view transitions navigation
  document.addEventListener("astro:after-swap", toggleNav);
</script>
